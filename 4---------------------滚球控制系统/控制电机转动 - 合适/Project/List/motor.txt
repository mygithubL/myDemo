; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\motor.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\motor.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I"C:\Users\Administrator\Desktop\控制电机转动 - 合适\Project\RTE" -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\motor.crf ..\User\motor.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GPIO_Configuration PROC
;;;17     
;;;18     void GPIO_Configuration(void)
000000  b508              PUSH     {r3,lr}
;;;19     {
;;;20     	GPIO_InitTypeDef GPIO_InitStructure;
;;;21     
;;;22     	GPIO_InitStructure.GPIO_Pin	= motor_1|motor_2|motor_3|motor_4;
000002  f44f5070          MOV      r0,#0x3c00
000006  f8ad0000          STRH     r0,[sp,#0]
;;;23     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 	  //管脚频率为50MHZ
00000a  2003              MOVS     r0,#3
00000c  f88d0002          STRB     r0,[sp,#2]
;;;24     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	  //模式为推挽输出
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;25     	GPIO_Init(GPIO_MOTOR, &GPIO_InitStructure);                //初始化led1寄存器
000016  4669              MOV      r1,sp
000018  4850              LDR      r0,|L1.348|
00001a  f7fffffe          BL       GPIO_Init
;;;26     }
00001e  bd08              POP      {r3,pc}
;;;27     
                          ENDP

                  Rotate PROC
;;;33     ********************************************************************************************/
;;;34     void Rotate(int ANum,int ADir,int ENA,int BNum, int BDir,int ENB)
000020  e92d5ff0          PUSH     {r4-r12,lr}
;;;35     {
000024  4604              MOV      r4,r0
000026  4689              MOV      r9,r1
000028  4615              MOV      r5,r2
00002a  461e              MOV      r6,r3
00002c  e9ddba0a          LDRD     r11,r10,[sp,#0x28]
;;;36     	int ANowNum = 0;//电机A当前输出的脉冲值
000030  2700              MOVS     r7,#0
;;;37     	int BNowNum = 0;//电机B当前输出的脉冲值
000032  46b8              MOV      r8,r7
;;;38     	
;;;39     	if(ADir>0)
000034  f1b90f00          CMP      r9,#0
000038  dd05              BLE      |L1.70|
;;;40     	{
;;;41     			Dir_A_H;
00003a  f44f6180          MOV      r1,#0x400
00003e  4847              LDR      r0,|L1.348|
000040  f7fffffe          BL       GPIO_SetBits
000044  e004              B        |L1.80|
                  |L1.70|
;;;42     	}
;;;43     	else
;;;44     	{
;;;45     			Dir_A_L;
000046  f44f6180          MOV      r1,#0x400
00004a  4844              LDR      r0,|L1.348|
00004c  f7fffffe          BL       GPIO_ResetBits
                  |L1.80|
;;;46     	}
;;;47     	if(BDir>0)
000050  f1bb0f00          CMP      r11,#0
000054  dd05              BLE      |L1.98|
;;;48     	{
;;;49     			Dir_B_H;
000056  f44f5180          MOV      r1,#0x1000
00005a  4840              LDR      r0,|L1.348|
00005c  f7fffffe          BL       GPIO_SetBits
000060  e004              B        |L1.108|
                  |L1.98|
;;;50     	}
;;;51     	else
;;;52     	{
;;;53     			Dir_B_L;
000062  f44f5180          MOV      r1,#0x1000
000066  483d              LDR      r0,|L1.348|
000068  f7fffffe          BL       GPIO_ResetBits
                  |L1.108|
;;;54     	}
;;;55     		
;;;56     	while(((ENA > 0)&&(ANum > ANowNum))||((ENB > 0)&&(BNum > BNowNum)))
00006c  e027              B        |L1.190|
                  |L1.110|
;;;57     	{	
;;;58     		if((ENA > 0)&&(ANum > ANowNum))
00006e  2d00              CMP      r5,#0
000070  dd10              BLE      |L1.148|
000072  42bc              CMP      r4,r7
000074  dd0e              BLE      |L1.148|
;;;59     		{
;;;60     			
;;;61     			if(PulsSignal == 1)
000076  483a              LDR      r0,|L1.352|
000078  6800              LDR      r0,[r0,#0]  ; PulsSignal
00007a  2801              CMP      r0,#1
00007c  d104              BNE      |L1.136|
;;;62     			{
;;;63     				 Pul_A_H; 
00007e  02c1              LSLS     r1,r0,#11
000080  4836              LDR      r0,|L1.348|
000082  f7fffffe          BL       GPIO_SetBits
000086  e005              B        |L1.148|
                  |L1.136|
;;;64     			}
;;;65     			else
;;;66     			{
;;;67     					 Pul_A_L; 
000088  f44f6100          MOV      r1,#0x800
00008c  4833              LDR      r0,|L1.348|
00008e  f7fffffe          BL       GPIO_ResetBits
;;;68     					ANowNum++;
000092  1c7f              ADDS     r7,r7,#1
                  |L1.148|
;;;69     			}
;;;70     		}
;;;71     		if((ENB > 0)&&(BNum > BNowNum))
000094  f1ba0f00          CMP      r10,#0
000098  dd11              BLE      |L1.190|
00009a  4546              CMP      r6,r8
00009c  dd0f              BLE      |L1.190|
;;;72     		{
;;;73     			if(PulsSignal==1)
00009e  4830              LDR      r0,|L1.352|
0000a0  6800              LDR      r0,[r0,#0]  ; PulsSignal
0000a2  2801              CMP      r0,#1
0000a4  d104              BNE      |L1.176|
;;;74     			{
;;;75     				Pul_B_H;
0000a6  0341              LSLS     r1,r0,#13
0000a8  482c              LDR      r0,|L1.348|
0000aa  f7fffffe          BL       GPIO_ResetBits
0000ae  e006              B        |L1.190|
                  |L1.176|
;;;76     			}
;;;77     			else
;;;78     			{
;;;79     				Pul_B_L;
0000b0  f44f5100          MOV      r1,#0x2000
0000b4  4829              LDR      r0,|L1.348|
0000b6  f7fffffe          BL       GPIO_SetBits
;;;80     				BNowNum++;	
0000ba  f1080801          ADD      r8,r8,#1
                  |L1.190|
0000be  2d00              CMP      r5,#0                 ;56
0000c0  dd01              BLE      |L1.198|
0000c2  42bc              CMP      r4,r7                 ;56
0000c4  dcd3              BGT      |L1.110|
                  |L1.198|
0000c6  f1ba0f00          CMP      r10,#0                ;56
0000ca  dd01              BLE      |L1.208|
0000cc  4546              CMP      r6,r8                 ;56
0000ce  dcce              BGT      |L1.110|
                  |L1.208|
;;;81     			}
;;;82     		}
;;;83     	}
;;;84     }
0000d0  e8bd9ff0          POP      {r4-r12,pc}
;;;85     
                          ENDP

                  motor_test PROC
;;;86     void motor_test(void)
0000d4  e92d41fc          PUSH     {r2-r8,lr}
;;;87     {
;;;88     	    int j,i=0,z,k ;
0000d8  2700              MOVS     r7,#0
;;;89     			/*左右摇摆*/
;;;90     //		for(i = 0; i<6;i++)
;;;91     //		{
;;;92     //				Rotate(1670*10,1,1,1670*10,0,1);  //A,B同上
;;;93     //		}
;;;94     //		for(j = 0; j <6;j++)
;;;95     //		{
;;;96     //			Rotate(1670*10,0,1,1670*10,1,1);  //A，B同下
;;;97     //		}
;;;98     		
;;;99     //	  /*前后摇摆*/
;;;100    //		for(i = 0; i<20;i++)
;;;101    //		{
;;;102    //				Rotate(1670*8,1,1,1670*12,0,1);  //A上60，B上30
;;;103    //		}
;;;104    //		for(j = 0; j <20;j++)
;;;105    //		{
;;;106    //			Rotate(1670*8,0,1,1670*12,1,1);  //A不动
;;;107    //		}
;;;108    		
;;;109    		  /*托马斯回环大摇摆*/
;;;110    			for(i = 0; i < 5;i++)
0000da  bf00              NOP      
0000dc  e00b              B        |L1.246|
                  |L1.222|
;;;111    			{
;;;112    					Rotate(1670*10,1,1,1670*6,0,0);  //A上60，B上30
0000de  2000              MOVS     r0,#0
0000e0  9000              STR      r0,[sp,#0]
0000e2  f2427324          MOV      r3,#0x2724
0000e6  2201              MOVS     r2,#1
0000e8  4611              MOV      r1,r2
0000ea  9001              STR      r0,[sp,#4]
0000ec  f244103c          MOV      r0,#0x413c
0000f0  f7fffffe          BL       Rotate
0000f4  1c7f              ADDS     r7,r7,#1              ;110
                  |L1.246|
0000f6  2f05              CMP      r7,#5                 ;110
0000f8  dbf1              BLT      |L1.222|
;;;113    			}
;;;114    			for(j = 0; j < 5;j++)
0000fa  2400              MOVS     r4,#0
0000fc  e00a              B        |L1.276|
                  |L1.254|
;;;115    			{
;;;116    				Rotate(1670*10,0,0,1670*10,0,1);  //A不动
0000fe  2001              MOVS     r0,#1
000100  2100              MOVS     r1,#0
000102  f244133c          MOV      r3,#0x413c
000106  460a              MOV      r2,r1
000108  e9cd1000          STRD     r1,r0,[sp,#0]
00010c  4618              MOV      r0,r3
00010e  f7fffffe          BL       Rotate
000112  1c64              ADDS     r4,r4,#1              ;114
                  |L1.276|
000114  2c05              CMP      r4,#5                 ;114
000116  dbf2              BLT      |L1.254|
;;;117    			}
;;;118    			for(z = 0; z < 5;z++)
000118  2500              MOVS     r5,#0
00011a  e00b              B        |L1.308|
                  |L1.284|
;;;119    			{
;;;120    				Rotate(1670*16,0,1,1670*10,0,0);  //电机转动
00011c  2000              MOVS     r0,#0
00011e  9000              STR      r0,[sp,#0]
000120  f244133c          MOV      r3,#0x413c
000124  2201              MOVS     r2,#1
000126  4601              MOV      r1,r0
000128  9001              STR      r0,[sp,#4]
00012a  f6460060          MOV      r0,#0x6860
00012e  f7fffffe          BL       Rotate
000132  1c6d              ADDS     r5,r5,#1              ;118
                  |L1.308|
000134  2d05              CMP      r5,#5                 ;118
000136  dbf1              BLT      |L1.284|
;;;121    			}
;;;122    			for(k = 0; k < 5;k++)
000138  2600              MOVS     r6,#0
00013a  e00b              B        |L1.340|
                  |L1.316|
;;;123    			{
;;;124    				Rotate(1670*6,0,0,1670*11,1,1);  //电机转动
00013c  2001              MOVS     r0,#1
00013e  9000              STR      r0,[sp,#0]
000140  f24473c2          MOV      r3,#0x47c2
000144  2200              MOVS     r2,#0
000146  4611              MOV      r1,r2
000148  9001              STR      r0,[sp,#4]
00014a  f2427024          MOV      r0,#0x2724
00014e  f7fffffe          BL       Rotate
000152  1c76              ADDS     r6,r6,#1              ;122
                  |L1.340|
000154  2e05              CMP      r6,#5                 ;122
000156  dbf1              BLT      |L1.316|
;;;125    			}	
;;;126    }
000158  e8bd81fc          POP      {r2-r8,pc}
;;;127    
                          ENDP

                  |L1.348|
                          DCD      0x40010c00
                  |L1.352|
                          DCD      PulsSignal

                          AREA ||.data||, DATA, ALIGN=2

                  PulsSignal
                          DCD      0x00000000
