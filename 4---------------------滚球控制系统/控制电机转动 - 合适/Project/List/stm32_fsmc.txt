; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\stm32_fsmc.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\stm32_fsmc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I"C:\Users\Administrator\Desktop\控制电机转动 - 合适\Project\RTE" -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\stm32_fsmc.crf ..\User\stm32_fsmc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FSMC_GPIO_Configuration PROC
;;;2      
;;;3      void FSMC_GPIO_Configuration(void)
000000  b508              PUSH     {r3,lr}
;;;4      {
;;;5        GPIO_InitTypeDef GPIO_InitStructure;	
;;;6      	//FSMC  管脚初始化
;;;7      
;;;8      	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_13;
000002  f44f5000          MOV      r0,#0x2000
000006  f8ad0000          STRH     r0,[sp,#0]
;;;9      	GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;
00000a  2003              MOVS     r0,#3
00000c  f88d0002          STRB     r0,[sp,#2]
;;;10     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;11     	GPIO_Init(GPIOD,&GPIO_InitStructure);
000016  4669              MOV      r1,sp
000018  487f              LDR      r0,|L1.536|
00001a  f7fffffe          BL       GPIO_Init
;;;12     	GPIO_SetBits(GPIOD,GPIO_Pin_13);//打开背光
00001e  f44f5100          MOV      r1,#0x2000
000022  487d              LDR      r0,|L1.536|
000024  f7fffffe          BL       GPIO_SetBits
;;;13     
;;;14     	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_1;//复位
000028  2002              MOVS     r0,#2
00002a  f8ad0000          STRH     r0,[sp,#0]
;;;15     	GPIO_Init(GPIOE,&GPIO_InitStructure);
00002e  4669              MOV      r1,sp
000030  487a              LDR      r0,|L1.540|
000032  f7fffffe          BL       GPIO_Init
;;;16     	
;;;17     	//启用fsmc复用功能 复用上拉模式
;;;18     
;;;19     	GPIO_InitStructure.GPIO_Pin =GPIO_Pin_14 //D0
000036  f24c7003          MOV      r0,#0xc703
00003a  f8ad0000          STRH     r0,[sp,#0]
;;;20     								|GPIO_Pin_15 //D1
;;;21     								|GPIO_Pin_0	 //D2
;;;22     								|GPIO_Pin_1	 //D3
;;;23     								|GPIO_Pin_8	 //D13
;;;24     								|GPIO_Pin_9	 //D14
;;;25     								|GPIO_Pin_10;//D15
;;;26     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP;
00003e  2018              MOVS     r0,#0x18
000040  f88d0003          STRB     r0,[sp,#3]
;;;27     	GPIO_Init(GPIOD,&GPIO_InitStructure);
000044  4669              MOV      r1,sp
000046  4874              LDR      r0,|L1.536|
000048  f7fffffe          BL       GPIO_Init
;;;28     
;;;29     	GPIO_InitStructure.GPIO_Pin =GPIO_Pin_7	 //D4
00004c  f64f7080          MOV      r0,#0xff80
000050  f8ad0000          STRH     r0,[sp,#0]
;;;30     								|GPIO_Pin_8	 //D5
;;;31     								|GPIO_Pin_9	 //D6
;;;32     								|GPIO_Pin_10 //D7
;;;33     								|GPIO_Pin_11 //D8
;;;34     								|GPIO_Pin_12 //D9
;;;35     								|GPIO_Pin_13 //D10
;;;36     								|GPIO_Pin_14 //D11
;;;37     								|GPIO_Pin_15;//D12
;;;38     	GPIO_Init(GPIOE,&GPIO_InitStructure);
000054  4669              MOV      r1,sp
000056  4871              LDR      r0,|L1.540|
000058  f7fffffe          BL       GPIO_Init
;;;39     
;;;40     
;;;41     	GPIO_InitStructure.GPIO_Pin =GPIO_Pin_11 //RS
00005c  f44f6003          MOV      r0,#0x830
000060  f8ad0000          STRH     r0,[sp,#0]
;;;42     								|GPIO_Pin_4	 //nOE
;;;43     								|GPIO_Pin_5; //nWE
;;;44     	GPIO_Init(GPIOD,&GPIO_InitStructure);
000064  4669              MOV      r1,sp
000066  486c              LDR      r0,|L1.536|
000068  f7fffffe          BL       GPIO_Init
;;;45     
;;;46     	GPIO_InitStructure.GPIO_Pin =GPIO_Pin_7; //NE1
00006c  2080              MOVS     r0,#0x80
00006e  f8ad0000          STRH     r0,[sp,#0]
;;;47     	GPIO_Init(GPIOD,&GPIO_InitStructure);
000072  4669              MOV      r1,sp
000074  4868              LDR      r0,|L1.536|
000076  f7fffffe          BL       GPIO_Init
;;;48     	
;;;49     	
;;;50     	
;;;51     	
;;;52     	// FIFO_RRST	读指针复位
;;;53     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;
00007a  f44f4000          MOV      r0,#0x8000
00007e  f8ad0000          STRH     r0,[sp,#0]
;;;54     	GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_Out_PP;
000082  2010              MOVS     r0,#0x10
000084  f88d0003          STRB     r0,[sp,#3]
;;;55     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000088  2003              MOVS     r0,#3
00008a  f88d0002          STRB     r0,[sp,#2]
;;;56     	GPIO_Init(GPIOB, &GPIO_InitStructure);
00008e  4669              MOV      r1,sp
000090  4863              LDR      r0,|L1.544|
000092  f7fffffe          BL       GPIO_Init
;;;57     
;;;58     	// FIFO_WRST  写指针复位
;;;59     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_14;
000096  f44f4080          MOV      r0,#0x4000
00009a  f8ad0000          STRH     r0,[sp,#0]
;;;60     	GPIO_Init(GPIOB, &GPIO_InitStructure);
00009e  4669              MOV      r1,sp
0000a0  485f              LDR      r0,|L1.544|
0000a2  f7fffffe          BL       GPIO_Init
;;;61     
;;;62     	// FIFO_OE	片选
;;;63     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
0000a6  f44f5000          MOV      r0,#0x2000
0000aa  f8ad0000          STRH     r0,[sp,#0]
;;;64     	GPIO_Init(GPIOB, &GPIO_InitStructure);
0000ae  4669              MOV      r1,sp
0000b0  485b              LDR      r0,|L1.544|
0000b2  f7fffffe          BL       GPIO_Init
;;;65     	
;;;66     	// FIFO_WR	写使能
;;;67     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
0000b6  f44f5080          MOV      r0,#0x1000
0000ba  f8ad0000          STRH     r0,[sp,#0]
;;;68     	GPIO_Init(GPIOB, &GPIO_InitStructure);
0000be  4669              MOV      r1,sp
0000c0  4857              LDR      r0,|L1.544|
0000c2  f7fffffe          BL       GPIO_Init
;;;69     
;;;70     	// FIFO_RCK	 时钟
;;;71     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
0000c6  2002              MOVS     r0,#2
0000c8  f8ad0000          STRH     r0,[sp,#0]
;;;72     	GPIO_Init(GPIOB, &GPIO_InitStructure);	
0000cc  4669              MOV      r1,sp
0000ce  4854              LDR      r0,|L1.544|
0000d0  f7fffffe          BL       GPIO_Init
;;;73     
;;;74     	// FIFO_RST	复位
;;;75     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
0000d4  2001              MOVS     r0,#1
0000d6  f8ad0000          STRH     r0,[sp,#0]
;;;76     	GPIO_Init(GPIOA, &GPIO_InitStructure);
0000da  4669              MOV      r1,sp
0000dc  4851              LDR      r0,|L1.548|
0000de  f7fffffe          BL       GPIO_Init
;;;77     
;;;78     	// FIFO_PWDN  
;;;79     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
0000e2  f44f5080          MOV      r0,#0x1000
0000e6  f8ad0000          STRH     r0,[sp,#0]
;;;80     	GPIO_Init(GPIOD, &GPIO_InitStructure);
0000ea  4669              MOV      r1,sp
0000ec  484a              LDR      r0,|L1.536|
0000ee  f7fffffe          BL       GPIO_Init
;;;81     		
;;;82     	//数据
;;;83     	// FIFO D0  PC8 
;;;84     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
0000f2  f44f7080          MOV      r0,#0x100
0000f6  f8ad0000          STRH     r0,[sp,#0]
;;;85     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
0000fa  2004              MOVS     r0,#4
0000fc  f88d0003          STRB     r0,[sp,#3]
;;;86     	GPIO_Init(GPIOC, &GPIO_InitStructure);
000100  4669              MOV      r1,sp
000102  4849              LDR      r0,|L1.552|
000104  f7fffffe          BL       GPIO_Init
;;;87     	
;;;88     	// FIFO D1  PC9
;;;89     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
000108  f44f7000          MOV      r0,#0x200
00010c  f8ad0000          STRH     r0,[sp,#0]
;;;90     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000110  2004              MOVS     r0,#4
000112  f88d0003          STRB     r0,[sp,#3]
;;;91     	GPIO_Init(GPIOC, &GPIO_InitStructure);
000116  4669              MOV      r1,sp
000118  4843              LDR      r0,|L1.552|
00011a  f7fffffe          BL       GPIO_Init
;;;92     	
;;;93     	// FIFO D2  PC10
;;;94     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
00011e  f44f6080          MOV      r0,#0x400
000122  f8ad0000          STRH     r0,[sp,#0]
;;;95     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000126  2004              MOVS     r0,#4
000128  f88d0003          STRB     r0,[sp,#3]
;;;96     	GPIO_Init(GPIOC, &GPIO_InitStructure);
00012c  4669              MOV      r1,sp
00012e  483e              LDR      r0,|L1.552|
000130  f7fffffe          BL       GPIO_Init
;;;97     	
;;;98     	// FIFO D3  PC11
;;;99     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
000134  f44f6000          MOV      r0,#0x800
000138  f8ad0000          STRH     r0,[sp,#0]
;;;100    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00013c  2004              MOVS     r0,#4
00013e  f88d0003          STRB     r0,[sp,#3]
;;;101    	GPIO_Init(GPIOC, &GPIO_InitStructure);
000142  4669              MOV      r1,sp
000144  4838              LDR      r0,|L1.552|
000146  f7fffffe          BL       GPIO_Init
;;;102    	
;;;103    	// FIFO D4  PD3
;;;104    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
00014a  2008              MOVS     r0,#8
00014c  f8ad0000          STRH     r0,[sp,#0]
;;;105    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000150  2004              MOVS     r0,#4
000152  f88d0003          STRB     r0,[sp,#3]
;;;106    	GPIO_Init(GPIOD, &GPIO_InitStructure);
000156  4669              MOV      r1,sp
000158  482f              LDR      r0,|L1.536|
00015a  f7fffffe          BL       GPIO_Init
;;;107    	
;;;108    	// FIFO D5  PC1
;;;109    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
00015e  2002              MOVS     r0,#2
000160  f8ad0000          STRH     r0,[sp,#0]
;;;110    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000164  2048              MOVS     r0,#0x48
000166  f88d0003          STRB     r0,[sp,#3]
;;;111    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00016a  4669              MOV      r1,sp
00016c  482e              LDR      r0,|L1.552|
00016e  f7fffffe          BL       GPIO_Init
;;;112    	
;;;113    	// FIFO D6  PC2
;;;114    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
000172  2004              MOVS     r0,#4
000174  f8ad0000          STRH     r0,[sp,#0]
;;;115    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000178  2048              MOVS     r0,#0x48
00017a  f88d0003          STRB     r0,[sp,#3]
;;;116    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00017e  4669              MOV      r1,sp
000180  4829              LDR      r0,|L1.552|
000182  f7fffffe          BL       GPIO_Init
;;;117    	
;;;118    	// FIFO D7  PC3
;;;119    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
000186  2008              MOVS     r0,#8
000188  f8ad0000          STRH     r0,[sp,#0]
;;;120    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
00018c  2048              MOVS     r0,#0x48
00018e  f88d0003          STRB     r0,[sp,#3]
;;;121    	GPIO_Init(GPIOC, &GPIO_InitStructure);	
000192  4669              MOV      r1,sp
000194  4824              LDR      r0,|L1.552|
000196  f7fffffe          BL       GPIO_Init
;;;122    	
;;;123    	// FIFO_VSYNC  PE4  外部中断
;;;124    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
00019a  2010              MOVS     r0,#0x10
00019c  f8ad0000          STRH     r0,[sp,#0]
;;;125    	GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_IPU;  
0001a0  2048              MOVS     r0,#0x48
0001a2  f88d0003          STRB     r0,[sp,#3]
;;;126    	GPIO_Init(GPIOE, &GPIO_InitStructure);
0001a6  4669              MOV      r1,sp
0001a8  481c              LDR      r0,|L1.540|
0001aa  f7fffffe          BL       GPIO_Init
;;;127    }
0001ae  bd08              POP      {r3,pc}
;;;128    
                          ENDP

                  FSMC_Configuration PROC
;;;129    void FSMC_Configuration(void)
0001b0  b500              PUSH     {lr}
;;;130    {
0001b2  b097              SUB      sp,sp,#0x5c
;;;131    	
;;;132      FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
;;;133      FSMC_NORSRAMTimingInitTypeDef  p;  
;;;134    
;;;135      p.FSMC_AddressSetupTime = 0x02;//地址建立时间
0001b4  2002              MOVS     r0,#2
0001b6  9001              STR      r0,[sp,#4]
;;;136      p.FSMC_AddressHoldTime = 0x00;//地址保持时间
0001b8  2000              MOVS     r0,#0
0001ba  9002              STR      r0,[sp,#8]
;;;137      p.FSMC_DataSetupTime = 0x05;//数据建立时间
0001bc  2005              MOVS     r0,#5
0001be  9003              STR      r0,[sp,#0xc]
;;;138      p.FSMC_BusTurnAroundDuration = 0x00;//总线恢复时间
0001c0  2000              MOVS     r0,#0
0001c2  9004              STR      r0,[sp,#0x10]
;;;139      p.FSMC_CLKDivision = 0x00;//时钟分频
0001c4  9005              STR      r0,[sp,#0x14]
;;;140      p.FSMC_DataLatency = 0x00;//数据保持时间
0001c6  9006              STR      r0,[sp,#0x18]
;;;141      p.FSMC_AccessMode = FSMC_AccessMode_B;
0001c8  f04f5080          MOV      r0,#0x10000000
0001cc  9007              STR      r0,[sp,#0x1c]
;;;142    
;;;143      //NOR FLASH 的 BANK1
;;;144      FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM1;
0001ce  2000              MOVS     r0,#0
0001d0  9008              STR      r0,[sp,#0x20]
;;;145      //数据线与地址线不复用
;;;146      FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable;
0001d2  9009              STR      r0,[sp,#0x24]
;;;147      //存储器类型 NOR FLASH
;;;148      FSMC_NORSRAMInitStructure.FSMC_MemoryType = FSMC_MemoryType_NOR;
0001d4  2008              MOVS     r0,#8
0001d6  900a              STR      r0,[sp,#0x28]
;;;149      //数据宽度为 16 位
;;;150      FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;
0001d8  2010              MOVS     r0,#0x10
0001da  900b              STR      r0,[sp,#0x2c]
;;;151      //使用异步写模式，禁止突发模式
;;;152      FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
0001dc  2000              MOVS     r0,#0
0001de  900c              STR      r0,[sp,#0x30]
;;;153      //本成员的配置只在突发模式下有效，等待信号极性为低
;;;154      FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
0001e0  900e              STR      r0,[sp,#0x38]
;;;155      //禁止非对齐突发模式
;;;156      FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;
0001e2  900f              STR      r0,[sp,#0x3c]
;;;157      //本成员配置仅在突发模式下有效。NWAIT 信号在什么时期产生
;;;158      FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
0001e4  9010              STR      r0,[sp,#0x40]
;;;159      //本成员的配置只在突发模式下有效，禁用 NWAIT 信号
;;;160      FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;
0001e6  f44f5080          MOV      r0,#0x1000
0001ea  9011              STR      r0,[sp,#0x44]
;;;161      //禁止突发写操作
;;;162      FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;
0001ec  2000              MOVS     r0,#0
0001ee  9012              STR      r0,[sp,#0x48]
;;;163      //写使能
;;;164      FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
0001f0  9013              STR      r0,[sp,#0x4c]
;;;165      //禁止扩展模式，扩展模式可以使用独立的读、写模式
;;;166      FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;
0001f2  9014              STR      r0,[sp,#0x50]
;;;167      //配置读写时序
;;;168      FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &p;
0001f4  a801              ADD      r0,sp,#4
0001f6  9015              STR      r0,[sp,#0x54]
;;;169      //配置写时序
;;;170      FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &p;
0001f8  9016              STR      r0,[sp,#0x58]
;;;171    
;;;172      //初始化FSMC
;;;173      FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
0001fa  a808              ADD      r0,sp,#0x20
0001fc  f7fffffe          BL       FSMC_NORSRAMInit
;;;174      //使能FSMC BANK1_SRAM 模式
;;;175      FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM1, ENABLE);  
000200  2101              MOVS     r1,#1
000202  2000              MOVS     r0,#0
000204  f7fffffe          BL       FSMC_NORSRAMCmd
;;;176    }
000208  b017              ADD      sp,sp,#0x5c
00020a  bd00              POP      {pc}
;;;177    
                          ENDP

                  FSMC_Config PROC
;;;178    void FSMC_Config(void)
00020c  b510              PUSH     {r4,lr}
;;;179    {
;;;180    	FSMC_GPIO_Configuration();
00020e  f7fffffe          BL       FSMC_GPIO_Configuration
;;;181    	FSMC_Configuration();
000212  f7fffffe          BL       FSMC_Configuration
;;;182    }
000216  bd10              POP      {r4,pc}
                          ENDP

                  |L1.536|
                          DCD      0x40011400
                  |L1.540|
                          DCD      0x40011800
                  |L1.544|
                          DCD      0x40010c00
                  |L1.548|
                          DCD      0x40010800
                  |L1.552|
                          DCD      0x40011000
