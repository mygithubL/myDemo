; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\usart.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\usart.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I"C:\Users\Administrator\Desktop\控制电机转动 - 合适\Project\RTE" -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\usart.crf ..\User\usart.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  fputc PROC
;;;2      
;;;3      int fputc(int ch, FILE *f)  
000000  b570              PUSH     {r4-r6,lr}
;;;4      {     
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;5          USART_SendData(USART1,ch);  
000006  b2a1              UXTH     r1,r4
000008  4827              LDR      r0,|L1.168|
00000a  f7fffffe          BL       USART_SendData
;;;6          while(USART_GetFlagStatus(USART1,USART_FLAG_TXE)==RESET);    
00000e  bf00              NOP      
                  |L1.16|
000010  2180              MOVS     r1,#0x80
000012  4825              LDR      r0,|L1.168|
000014  f7fffffe          BL       USART_GetFlagStatus
000018  2800              CMP      r0,#0
00001a  d0f9              BEQ      |L1.16|
;;;7            
;;;8          return ch;  
00001c  4620              MOV      r0,r4
;;;9      }  
00001e  bd70              POP      {r4-r6,pc}
;;;10               
                          ENDP

                  _sys_exit PROC
;;;19     //定义_sys_exit()以避免使用半主机模式    
;;;20     _sys_exit(int x) 
000020  4601              MOV      r1,r0
;;;21     { 
;;;22     		x = x; 
000022  bf00              NOP      
;;;23     } 
000024  4770              BX       lr
;;;24     
                          ENDP

                  _ttywrch PROC
;;;25     void _ttywrch(int ch)  
000026  bf00              NOP      
;;;26     { 
;;;27     		ch = ch;
;;;28     }
000028  4770              BX       lr
;;;29     
                          ENDP

                  USART_Configuration PROC
;;;30     void USART_Configuration(void)
00002a  b500              PUSH     {lr}
;;;31     {
00002c  b085              SUB      sp,sp,#0x14
;;;32     	GPIO_InitTypeDef GPIO_InitStructure;	
;;;33       USART_InitTypeDef  USART_InitStructure;
;;;34     	
;;;35     	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_9;//TX
00002e  f44f7000          MOV      r0,#0x200
000032  f8ad0010          STRH     r0,[sp,#0x10]
;;;36     	GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;
000036  2003              MOVS     r0,#3
000038  f88d0012          STRB     r0,[sp,#0x12]
;;;37     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP;
00003c  2018              MOVS     r0,#0x18
00003e  f88d0013          STRB     r0,[sp,#0x13]
;;;38     	GPIO_Init(GPIOA,&GPIO_InitStructure);
000042  a904              ADD      r1,sp,#0x10
000044  4819              LDR      r0,|L1.172|
000046  f7fffffe          BL       GPIO_Init
;;;39     
;;;40     	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_10;//RX
00004a  f44f6080          MOV      r0,#0x400
00004e  f8ad0010          STRH     r0,[sp,#0x10]
;;;41     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN_FLOATING;
000052  2004              MOVS     r0,#4
000054  f88d0013          STRB     r0,[sp,#0x13]
;;;42     	GPIO_Init(GPIOA,&GPIO_InitStructure);
000058  a904              ADD      r1,sp,#0x10
00005a  4814              LDR      r0,|L1.172|
00005c  f7fffffe          BL       GPIO_Init
;;;43     
;;;44     	USART_InitStructure.USART_BaudRate=9600;
000060  f44f5016          MOV      r0,#0x2580
000064  9000              STR      r0,[sp,#0]
;;;45     	USART_InitStructure.USART_WordLength=USART_WordLength_8b;
000066  2000              MOVS     r0,#0
000068  f8ad0004          STRH     r0,[sp,#4]
;;;46     	USART_InitStructure.USART_StopBits=USART_StopBits_1;
00006c  f8ad0006          STRH     r0,[sp,#6]
;;;47     	USART_InitStructure.USART_Parity=USART_Parity_No;
000070  f8ad0008          STRH     r0,[sp,#8]
;;;48     	USART_InitStructure.USART_HardwareFlowControl=USART_HardwareFlowControl_None;
000074  f8ad000c          STRH     r0,[sp,#0xc]
;;;49     	USART_InitStructure.USART_Mode=USART_Mode_Rx|USART_Mode_Tx;
000078  200c              MOVS     r0,#0xc
00007a  f8ad000a          STRH     r0,[sp,#0xa]
;;;50     
;;;51     	USART_Init(USART1,&USART_InitStructure);
00007e  4669              MOV      r1,sp
000080  4809              LDR      r0,|L1.168|
000082  f7fffffe          BL       USART_Init
;;;52     	USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);
000086  2201              MOVS     r2,#1
000088  f2405125          MOV      r1,#0x525
00008c  4806              LDR      r0,|L1.168|
00008e  f7fffffe          BL       USART_ITConfig
;;;53     	USART_Cmd(USART1,ENABLE);
000092  2101              MOVS     r1,#1
000094  4804              LDR      r0,|L1.168|
000096  f7fffffe          BL       USART_Cmd
;;;54     	USART_ClearFlag(USART1,USART_FLAG_TC);
00009a  2140              MOVS     r1,#0x40
00009c  4802              LDR      r0,|L1.168|
00009e  f7fffffe          BL       USART_ClearFlag
;;;55     }
0000a2  b005              ADD      sp,sp,#0x14
0000a4  bd00              POP      {pc}
                          ENDP

0000a6  0000              DCW      0x0000
                  |L1.168|
                          DCD      0x40013800
                  |L1.172|
                          DCD      0x40010800

                          AREA ||.data||, DATA, ALIGN=2

                  __stdout
                          DCD      0x00000000
