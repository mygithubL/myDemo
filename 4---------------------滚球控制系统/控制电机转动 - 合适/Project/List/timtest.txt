; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Obj\timtest.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\Obj\timtest.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I"D:\Program Files\Keil\ARM\RV31\INC" -I"D:\Program Files\Keil\ARM\CMSIS\Include" -I"D:\Program Files\Keil\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\timtest.crf ..\BaseDrive\TimTest.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Gpio_Init PROC
;;;27     *******************************************************************************************/
;;;28     void Gpio_Init(void)
000000  b508              PUSH     {r3,lr}
;;;29     {
;;;30     	GPIO_InitTypeDef GPIO_InitStructure;
;;;31     
;;;32     	RCC_APB2PeriphClockCmd(RCC_APB_LED1, ENABLE);
000002  2101              MOVS     r1,#1
000004  2080              MOVS     r0,#0x80
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;33     
;;;34     	GPIO_InitStructure.GPIO_Pin	= LED1_Pin;              //选择led3
00000a  f44f7080          MOV      r0,#0x100
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;35       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 	 //管脚频率为50MHZ
000012  2003              MOVS     r0,#3
000014  f88d0002          STRB     r0,[sp,#2]
;;;36       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	 //模式为推挽输出
000018  2010              MOVS     r0,#0x10
00001a  f88d0003          STRB     r0,[sp,#3]
;;;37       GPIO_Init(LED1_GPIO, &GPIO_InitStructure);           //初始化led3寄存器
00001e  4669              MOV      r1,sp
000020  4813              LDR      r0,|L1.112|
000022  f7fffffe          BL       GPIO_Init
;;;38     }
000026  bd08              POP      {r3,pc}
;;;39     
                          ENDP

                  TimCounterInit PROC
;;;49     *******************************************************************************************/
;;;50     void TimCounterInit(void)
000028  b50e              PUSH     {r1-r3,lr}
;;;51     {
;;;52     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;53     
;;;54     	/* TIM时钟使能 */
;;;55     	if ((TIM == TIM1) || (TIM == TIM8))
;;;56     		RCC_APB2PeriphClockCmd(RCC_APB_TIM, ENABLE);
;;;57     	else if((TIM == TIM2) || (TIM == TIM3) || (TIM == TIM4) || (TIM == TIM5))
;;;58     		RCC_APB1PeriphClockCmd(RCC_APB_TIM, ENABLE);
00002a  2101              MOVS     r1,#1
00002c  4608              MOV      r0,r1
00002e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;59     
;;;60     	/* 基定时器初始化 */
;;;61     	TIM_TimeBaseStructure.TIM_Period = TIM_COUNTER;				//计数值
000032  f44f60fa          MOV      r0,#0x7d0
000036  f8ad0004          STRH     r0,[sp,#4]
;;;62     	TIM_TimeBaseStructure.TIM_Prescaler = TIM_PSC;				//分频系数		 
00003a  f64840a0          MOV      r0,#0x8ca0
00003e  f8ad0000          STRH     r0,[sp,#0]
;;;63     	TIM_TimeBaseStructure.TIM_ClockDivision = 0;				//时钟分割：寄存器（技术）手册基定时器未讲到。
000042  2000              MOVS     r0,#0
000044  f8ad0006          STRH     r0,[sp,#6]
;;;64     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;	//计数模式
000048  f8ad0002          STRH     r0,[sp,#2]
;;;65     	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;			//重复计数值
00004c  f88d0008          STRB     r0,[sp,#8]
;;;66     	
;;;67     	TIM_TimeBaseInit(TIM, &TIM_TimeBaseStructure);				//初始化TIM
000050  4669              MOV      r1,sp
000052  f04f4080          MOV      r0,#0x40000000
000056  f7fffffe          BL       TIM_TimeBaseInit
;;;68     	
;;;69     	TIM_ITConfig(TIM,TIM_IT_Update,ENABLE);						//打开 更新事件 中断
00005a  2201              MOVS     r2,#1
00005c  4611              MOV      r1,r2
00005e  0790              LSLS     r0,r2,#30
000060  f7fffffe          BL       TIM_ITConfig
;;;70     	TIM_Cmd(TIM, ENABLE);										//使能TIM
000064  2101              MOVS     r1,#1
000066  0788              LSLS     r0,r1,#30
000068  f7fffffe          BL       TIM_Cmd
;;;71     }
00006c  bd0e              POP      {r1-r3,pc}
;;;72     
                          ENDP

00006e  0000              DCW      0x0000
                  |L1.112|
                          DCD      0x40011c00

                          AREA ||.data||, DATA, ALIGN=2

                  capture
                          DCD      0x00000000
